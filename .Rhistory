ttestBF(firstExp)
ttestBF(secondExp)
first <- rnorm(1000)
second <- rnorm(1000, mean = .3 * sd(first))
installNewPackage("BayesFactor")
library("BayesFactor")
t.test(first)
wilcox.test(first)
ttestBF(first)
t.test(second)
wilcox.test(second)
ttestBF(second)
t.test(first, second, paried=TRUE)
wilcox.test(first, second, paired=TRUE)
ttestBF(first, second, paired=TRUE)
t.test(firstExp, secondExp, paried=TRUE)
wilcox.test(firstExp, secondExp, paired=TRUE)
ttestBF(firstExp, secondExp, paired=TRUE)
chisq.test(table(indoor, outdoor))
contingencyTableBF(table(indoor, outdoor), sampleType = "indepMulti", fixedMargin = "cols")
set.seed(1000)
indoor<- sample(c("A","B","C","D"),prob=c(5,8,25,6),size=200,replace=T)
outdoor <-sample(c("A","B","C","D"),prob=c(5,20,3,6),size=200,replace=T)
chisq.test(table(indoor, outdoor))
contingencyTableBF(table(indoor, outdoor), sampleType = "indepMulti", fixedMargin = "cols")
sampleTbl <- tapply(rep(1, 400), list(c(indoor, outdoor), c(rep(1:2, each=200))), length)
sampleTbl[is.na(sampleTbl)] <- 0
chisq.test(sampleTbl)
contingencyTableBF(sampleTbl, sampleType = "indepMulti", fixedMargin = "cols")
table(indoor, outdoor)
chisq.test(table(indoor, outdoor))
contingencyTableBF(table(indoor, outdoor), sampleType = "indepMulti", fixedMargin = "cols")
sd(first)
sd(first)*.3
mean(first)
secondMean <- mean(first) - (.3 * sd(first))
secondMean
sampleTbl <- tapply(rep(1, 400), list(c(indoor, outdoor), c(rep(1:2, each=200))), length)
sampleTbl[is.na(sampleTbl)] <- 0
chisq.test(sampleTbl)
contingencyTableBF(sampleTbl, sampleType = "indepMulti", fixedMargin = "cols")
ortho <- c(1,-1,0,-1,0,1,0,1,-1)
training %*% ortho
training <- c(1,1,1,0,0,0,-1,-1,-1)
feedback <- c(1,0,-1,1,0,-1,1,0,-1)
training %*%feedback
cor(training, feedback)
ortho <- c(1,-1,0,-1,0,1,0,1,-1)
training %*% ortho
cor(training, ortho)
cor(feedback, thirdLevel)
cor(feedback, ortho)
-2.637, -2.184, 0.091 , -1.099, -4.710, -4.649, -1.888, -1.903, -0.871)
trial <- rep(c(1,2,3,4,5),each = 9)
training <- rep(training, each = 5)
feedback <- rep(feedback, each = 5)
ortho <- rep(ortho, each = 5)
ortho <- rep(ortho, each = 5)
df <- data.frame(trial, outcome, training, feedback, ortho)
-2.637, -2.184, 0.091 , -1.099, -4.710, -4.649, -1.888, -1.903, -0.871)
outcome <- c(6.483, 9.240, 8.104, 9.212, 11.873, 5.781, 5.791, 8.276, 8.463, 10.577, 11.708, 10.408,
12.309, 13.125, 15.945, -3.975, -2.100, -2.161, -1.438, 0.856, 1.679, 1.571, 4.179, 4.682,
4.370, 6.592, 6.357 , 8.861, 9.445, 11.406, -10.462, -8.492, -7.772, -5.454, -4.557, -4.806,
-2.637, -2.184, 0.091 , -1.099, -4.710, -4.649, -1.888, -1.903, -0.871)
df <- data.frame(trial, outcome, training, feedback, ortho)
colnames(df) <- c("trials", "outcome", "training", "feedback", "ortho")
modal <- lm(outcome ~ ., df)
modal
summary(modal, correlation = T)
modal1 <- lm(df$outcome ~ df$training + df$feedback)
summary(modal1, correlation = T)
modal1 <- lm(df$outcome ~ df$trials + df$training + df$feedback)
summary(modal1, correlation = T)
modal2 <- lm(df$outcome ~ df$training + df$feedback + df$ortho)
summary(modal2, correlation = T)
modal3 <- lm(df$outcome ~ df$training + df$feedback)
summary(modal3, correlation = T)
modal4 <- lm(df$outcome ~ df$training)
summary(modal4, correlation = T)
modal <- lm(df$outcome ~ as.factor(df$trials) + df$training + df$feedback + df$thirdIV)
modal <- lm(df$outcome ~ as.factor(df$trials) + df$training + df$feedback + df$ortho)
summary(modal, correlation = T)
modal_factor <- lm(df$outcome ~ as.factor(df$trials) + df$training + df$feedback + df$ortho)
modal <- lm(outcome ~ ., df)
summary(modal, correlation = T)
modal_factor <- lm(df$outcome ~ as.factor(df$trials) + df$training + df$feedback + df$ortho)
anova(modal, modal_factor)
modal <- lm(df$outcome ~ df$trials + df$training + df$feedback + df$ortho)
modal_factor <- lm(df$outcome ~ as.factor(df$trials) + df$training + df$feedback + df$ortho)
anova(modal, modal_factor)
setwd("G:/MS in DS/Sem 1/UN 5550/Assignments/1 Exploratory Data Analysis")
df <- read.csv("df.csv")
df
range(df$Peak)
#plotting
plot(df$Successful, df$Peak)
plot(df$Successful, df$danceability)
plot(df$Successful,df$energy)
plot(df$Successful,df$key)
plot(df$Successful,df$loudness)
plot(df$Successful, df$acousticness)
plot(df$Successful, df$liveness)
plot(df$Successful, df$instrumentalness)
plot(df$Successful, df$valence)
plot(df$Successful, df$time_signature)
plot(df$Successful, df$tempo)
plot(df$Successful, df$duration_ms)
plot(df$Successful, df$speechiness)
df1
plot(df$Successful, df$mode)
train_data=subset(df1,X<=350)
train_data
#Separating train dataset and testdata
test_data=subset(df1,X>350)
test_data
df1=df[!df$X == df[df$Successful == 0 & df$Peak < 10, ]$X, ]
#Removing noise
cor(train_data$Successful, train_data$danceability)
#finding correlation between varibles
cor(train_data$Successful, train_data$energy)
cor(train_data$Successful, train_data$key)
cor(train_data$Successful, train_data$loudness)
cor(train_data$Successful, train_data$mode)
cor(train_data$Successful, train_data$Peak)
df1=df[!df$X == df[df$Successful == 0 & df$Peak < 10, ]$X, ]
df1
#Separating train dataset and testdata
train_data=subset(df1,X<=350)
train_data
test_data=subset(df1,X>350)
test_data
#finding correlation between varibles
cor(train_data$Successful, train_data$Peak)
cor(train_data$Successful, train_data$danceability)
cor(train_data$Successful, train_data$energy)
cor(train_data$Successful, train_data$key)
setwd("G:/MS in DS/Sem 1/UN 5550/Assignments/1 Exploratory Data Analysis")
colnames(df)
predictors <- c(df$Peak, df$danceability, df$energy, df$key, df$loudness, df$mode,
df$speechiness, df$acousticness, df$instrumentalness, df$liveness,
df$valence, df$tempo, df$duration_ms, df$time_signature)
predictors
predictors <- colnamws(df)
predictors <- colnames(df)
predictors
class(predictors)
predictors <- list(colnames(df))
predictors
class(predictors)
predictors <- list(colnames(df))[5:]
predictors <- list(colnames(df))[5,]
predictors <- list(colnames(df))[5:]
predictors <- list(colnames(df))[5:9]
predictors <- list(colnames(df))[5:25]
predictors
predictors <- predictors[5:]
predictors <- predictors[5:25]
predictors
predictors <- colnames(df)
predictors <- predictors[5:25]
predictors
predictors <- predictors[5:]
predictors <- predictors[5:,]
predictors <- predictors[5:24]
predictors
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors
predictors <- predictors[-2]
predictors
plotSuccess <-  function(predictors) {
for(predictor in predictors)
plot(df$Successful, df[predictor], main = paste("Successfulness Vs ", predictor, sep = "")
xlab = "SuccesFulness", ylab = predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plotSuccess(predictors)
plot_success <- function(predictors) {
for(predictor in predictors)
plot(df$Successful, df[predictor], main = paste("Successfulness Vs ", predictor, sep = ""),
xlab = "SuccesFulness", ylab = predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plotSuccess(predictors)
plot_success <- function(predictors) {
for(predictor in predictors)
plot(df$Successful, df[predictor], main = paste("Successfulness Vs ", predictor, sep = ""),
xlab = "SuccesFulness", ylab = predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plot_success(predictors)
plot_success <- function(predictors) {
for(predictor in predictors)
plot(df$Successful, df[predictor], main = paste("Successfulness Vs ", predictor, sep = ""),
xlab = "SuccesFulness", ylab = predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plot_success(predictors)
plot_success <- function(predictors) {
for(predictor in predictors)
print(predictor)
# plot(df$Successful, df[predictor], main = paste("Successfulness Vs ", predictor, sep = ""),
#      xlab = "SuccesFulness", ylab = predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plot_success(predictors)
plot_success <- function(predictors) {
for(predictor in predictors)
print(predictor)
plot(df$Successful, df[predictor])
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plot_success(predictors)
plot_success <- function(predictors) {
for(predictor in predictors)
print(predictor)
plot(df$Successful, df[predictor])
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plot_success(predictors)
plot_success <- function(predictors) {
for(predictor in seq(predictors)) {
print(predictor)
plot(df$Successful, df[predictor])
}
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
plot_success(predictors)
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
for(predictor in seq(predictors)) {
plot(Successful, predictor, data = df)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
for(predictor in seq(predictors)) {
plot(df$Successful, df$predictor, data = df)
}
predictors
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
for(predictor in predictors) {
plot(df$Successful, df$predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
for(predictor in predictors) {
plot(df$Successful, df$predictor)
}
plot(df$Successful, predictor)
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
for(predictor in predictors) {
plot(df$Successful, predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
successfulness <- df$Successful
for(predictor in predictors) {
plot(df$Successful, df$predictor)
}
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
successfulness <- df$Successful
for(predictor in predictors) {
plot(df$Successful, df[predictor])
}
colValues <- c(5)
colvalues <- c(colValues, 7:24)
colvalues
df[,5]
colnames(df)[5]
predictors <- colnames(df)
predictors <- predictors[5:24]
predictors <- predictors[-2]
successfulness <- df$Successful
colValues <- c(5)
colvalues <- c(colValues, 7:24)
for(i in colvalues) {
plot(df$Successful, df[, i], main = paste("Successful vs ", colnames(df)[i], sep = ""),
xlab = "Successful", ylab = colnames(df)[i])
}
predictors <- colnames(df)[5:24]
predictors
predictors <- predictors[-2]
c(5, 7:24)
colValues <- c(5, 7:24)
colnames(df)[5:24][-2]
predictors <- colnames(df)[5:24][-2]
colValues <- c(5, 7:24)
for(i in colvalues) {
plot(df$Successful, df[, i], main = paste("Successful vs ", colnames(df)[i], sep = ""),
xlab = "Successful", ylab = colnames(df)[i])
}
for(i in colvalues) {
cor(train_data$Successful, train_data[, i])
}
colvalues
train_data[, 5]
for(i in colvalues) {
cor(train_data$Successful, train_data[, i])
}
train_data$Successful
class(train_data[, 5])
cor(train_data$Successful, as.numeric(train_data[, i]))
for(i in colvalues) {
cor(train_data$Successful, as.numeric(train_data[, i]))
}
cor(train_data$Successful, train_data$Peak)
cor(train_data$Successful, train_data$danceability)
cor(train_data$Successful, train_data$energy)
cor(train_data$Successful, train_data$key)
cor(train_data$Successful, train_data$loudness)
cor(train_data$Successful, train_data$mode)
cor(train_data$Successful, train_data$speechiness)
cor(train_data$Successful, train_data$acousticness)
cor(train_data$Successful, train_data$instrumentalness)
cor(train_data$Successful, train_data$liveness)
cor(train_data$Successful, train_data$valence)
cor(train_data$Successful, train_data$tempo)
cor(train_data$Successful, train_data$duration_ms)
cor(train_data$Successful, train_data$time_signature)
train_data[5:24][-2]
View(train_data[5:24][-2])
View(train_data[5:24][-2, -3])
apply(train_data[5:24][-2, -3], 2, function(u) cor(df$Successful, u)
apply(train_data[5:24][-2, -3], 2, function(u) cor(df$Successful, u))
apply(train_data[5:24][-2, -3], 2, function(u) cor(df$Successful, u))
apply(train_data[5:24][-2, -3], 2, function(u) cor(df$Successful, as.numeric(u)))
apply(train_data[5:24][-2, -3], 2, function(u) cor(df$Successful, as.numeric(u)))
for(i in colvalues) {
cor(train_data$Successful, train_data[, i])
}
train_data[, 3]
train_data[, 6]
train_data[, 7]
train_data[, 9]
for(i in colvalues) {
cor(train_data$Successful, as.numeric(train_data[, i]))
}
apply(train_data[5:24][-2, -3], 2, function(u) cor(df$Successful, as.numeric(u)))
cor(train_data$Successful, train_data$Peak)
cor(train_data$Successful, train_data$danceability)
cor(train_data$Successful, train_data$energy)
cor(train_data$Successful, train_data$key)
cor(train_data$Successful, train_data$loudness)
cor(train_data$Successful, train_data$mode)
cor(train_data$Successful, train_data$speechiness)
cor(train_data$Successful, train_data$acousticness)
cor(train_data$Successful, train_data$instrumentalness)
cor(train_data$Successful, train_data$liveness)
cor(train_data$Successful, train_data$valence)
cor(train_data$Successful, train_data$tempo)
cor(train_data$Successful, train_data$duration_ms)
cor(train_data$Successful, train_data$time_signature)
train_data
colnames(train_data)
non_impact_cols <- c(1:6, 9, 12, 18:23 )
length(non_impact_cols)
train_data <- train_data[, !non_impact_cols]
View(train_data)
train_data
non_impact_cols
train_data <- train_data[, !c(1:6, 9, 12, 18:23)]
train_data
non_impact_cols <- c(1:6, 9, 12, 18:23)
train_data <- train_data[, -non_impact_cols]
train_data$X=NULL
train_data$id=NULL
train_data$Title=NULL
train_data$Artist=NULL
train_data$Date.Entered=NULL
train_data$Peak=NULL
train_data$uri=NULL
train_data$track_href=NULL
train_data$analysis_url=NULL
train_data$type=NULL
train_data$loudness=NULL
train_data$energy=NULL
train_data$duration_ms=NULL
train_data$tempo=NULL
train_data
train_data
non_impact_cols <- c(1:6, 9, 12, 18:23)
train_data <- train_data[, -non_impact_cols]
train_data=subset(df1,X<=350)
test_data=subset(df1,X>350)
non_impact_cols <- c(1:6, 9, 12, 18:23)
-non_impact_cols
train_data <- train_data[, -non_impact_cols]
train_data
View(train_data)
non_impact_cols <- c(1:6, 9, 12, 18:23)
df1 <- df1[, -non_impact_cols]
View(df1)
train_data=subset(df1,X<=350)
train_data <- df1[1:350, ]
test_data <- df1[351:-1, ]
test_data <- df1[351, ]
train_data <- df1[1:350, ]
test_data <- df1[351:ncol(df1), ]
View(train_data)
View(test_data)
non_impact_cols <- c(1:6, 9, 12, 18:23)
train_data <- train_data[, -non_impact_cols]
test_data <- test_data[, -non_impact_cols]
df1 <- df[!df$X == df[df$Successful == 0 & df$Peak < 10, ]$X, ]
train_data <- df1[1:350, ]
test_data <- df1[351:ncol(df1), ]
cor(train_data$Successful, train_data$Peak)
cor(train_data$Successful, train_data$danceability)
cor(train_data$Successful, train_data$energy)
cor(train_data$Successful, train_data$key)
cor(train_data$Successful, train_data$loudness)
cor(train_data$Successful, train_data$mode)
cor(train_data$Successful, train_data$speechiness)
cor(train_data$Successful, train_data$acousticness)
cor(train_data$Successful, train_data$instrumentalness)
cor(train_data$Successful, train_data$liveness)
cor(train_data$Successful, train_data$valence)
cor(train_data$Successful, train_data$tempo)
cor(train_data$Successful, train_data$duration_ms)
cor(train_data$Successful, train_data$time_signature)
non_impact_cols <- c(1:6, 9, 12, 18:23)
train_data <- train_data[, -non_impact_cols]
test_data <- test_data[, -non_impact_cols]
test_data=data.frame(lapply(test_data, function(test_data) scale(test_data, center = FALSE, scale = max(test_data, na.rm = TRUE)/1)))
test_data
df1 <- df[!df$X == df[df$Successful == 0 & df$Peak < 10, ]$X, ]
train_data <- df1[1:350, ]
test_data <- df1[351:ncol(df1), ]
non_impact_cols <- c(1:6, 9, 12, 18:23)
train_data <- train_data[, -non_impact_cols]
test_data <- test_data[, -non_impact_cols]
scale_data <- function(data) {
train_data <- data.frame(lapply(data,
function(data)
scale(data, center = FALSE,
scale = max(data, na.rm = TRUE)/1)))
}
scale_data(train_data)
scale_data(test_data)
View(test_data)
model <- glm(Successful ~., family = binomial(link = 'logit'), data = train_data)
summary(model)
fitted.results = predict(model,newdata=test_data,type='response')
fitted.results = ifelse(fitted.results > 0.5,1,0)
fitted.results
aucc= mean(fitted.results != test_data$Successful)
print(paste('Accuracy',1-aucc))
library("dplyr", lib.loc="~/R/win-library/3.3")
library(ggplot2)
library(dplyr)
library("httr", lib.loc="~/R/win-library/3.3")
setwd("F:/Tutorials/Statistics/Duke university Statistics with R/Introduction to probablity and Data/Final Project")
load("brfss2013.RData")
load("brfss2013.RData")
load("brfss2013.gz")
names(brfss2013)
data1 = brfss2013[,c(255,260,314)]
data1
setwd("G:/MS in DS/Sem 1/UN 5550/Assignments/1 Exploratory Data Analysis")
df <- read.csv("df.csv")
range(df$Peak)
colValues <- c(5, 7:24)
for(i in colValues) {
plot(df$Successful, df[, i], main = paste("Successful vs ", colnames(df)[i], sep = ""),
xlab = "Successful", ylab = colnames(df)[i])
}
train_data <- scale_data(train_data)
test_data <- scale_data(test_data)
scale_data <- function(data) {
data.frame(lapply(data, function(data)
scale(data, center = FALSE,
scale = max(data, na.rm = TRUE)/1)))
}
train_data <- scale_data(train_data)
test_data <- scale_data(test_data)
train_data
test_data
ncol(df1)
nrow(df1)
test_data <- df1[351:nrow(df1), ]
test_data
length(test_data)
nrow(test_data)
test_data <- df1[351:, ]
test_data <- df1[351:]
setwd("G:/MS in DS/Sem 1/UN 5550/Assignments/1 Exploratory Data Analysis")
